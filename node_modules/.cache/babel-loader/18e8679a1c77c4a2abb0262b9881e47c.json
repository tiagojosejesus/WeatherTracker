{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Udemy\\\\React\\\\weathertracker\\\\src\\\\Components\\\\Weather.js\";\nimport React from \"react\";\n\nconst Weather = ({\n  weatherData\n}) => {\n  console.log(weatherData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: weatherData.map(weather => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: weather.loading === true || !weather.data ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Minimum Temperature:\", weather.data.forecast.forecastday.day.mintemp_c]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["D:/Udemy/React/weathertracker/src/Components/Weather.js"],"names":["React","Weather","weatherData","console","log","map","weather","loading","data","forecast","forecastday","day","mintemp_c"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,sBACE;AAAA,cACGA,WAAW,CAACG,GAAZ,CAAiBC,OAAD,iBACf;AAAA,gBACGA,OAAO,CAACC,OAAR,KAAoB,IAApB,IAA4B,CAACD,OAAO,CAACE,IAArC,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAA,2CAEGF,OAAO,CAACE,IAAR,CAAaC,QAAb,CAAsBC,WAAtB,CAAkCC,GAAlC,CAAsCC,SAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAlBD;;KAAMX,O;AAoBN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst Weather = ({ weatherData }) => {\r\n  console.log(weatherData);\r\n  return (\r\n    <div>\r\n      {weatherData.map((weather) => (\r\n        <div>\r\n          {weather.loading === true || !weather.data ? (\r\n            <p>loading...</p>\r\n          ) : (\r\n            <p>\r\n              Minimum Temperature:\r\n              {weather.data.forecast.forecastday.day.mintemp_c}\r\n            </p>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n"]},"metadata":{},"sourceType":"module"}